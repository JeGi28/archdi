#!/bin/bash

# Arch Linux Desktop Install (archdi)
# -----------------------------------
# author    : MatMoul
#             https://github.com/MatMoul
#             http://sourceforge.net/u/matmoul
# project   : https://github.com/MatMoul/archdi
#             http://sourceforge.net/projects/archdi/
# license   : GPLv3 (http://opensource.org/licenses/GPL-3.0)


apptitle="Arch Linux Desktop Install (archdi) - Version: 2019.07.03.22.44.21 (GPLv3)"
version="2019.07.03.22.44.21"
cachedir=~/.cache/archdi


help(){
	echo "${apptitle}"
	echo ""
	echo "-h | --help                   : this screen"
	echo "-i | --install                : install"
	echo "-l | --local dir              : run local archdi-pkg dir"
	echo "-t | --test githubuser branch : launch a forked branch"
	echo "no args                       : start archdi"
}

install(){
	dependencies
	echo ""
	echo "Install $apptitle ..."
	cp $0 /usr/bin/archdi
	if [[ ${?} == 0 ]]; then
		chmod 755 /usr/bin/archdi 2>/dev/null
		echo "$apptitle is installed."
		echo "type archdi to start."
	else
		echo "Error installing $apptitle."
	fi
}

run(){
	dependencies
	mkdir -p ${cachedir} 2>/dev/null
	cd ${cachedir}
	find . ! -name 'pkg.tar' -exec rm -R -f "{}" + 2>/dev/null
	if [[ ${testmode} == 0 ]]; then
		if [[ ${localmode} == 0 ]]; then
			getfile 2 ${cachedir}/pkg.tar
		fi
		tar -xf ${cachedir}/pkg.tar
	else
		curl -L "https://raw.githubusercontent.com/${repo}/archdi-pkg/${branch}/lib" > lib
		sed -i "/apptitle=/c\apptitle=\"Arch Linux Desktop Install (archdi) - Branch: ${repo}/${branch} (GPLv3)\"" lib
		sed -i "/baseurl=/c\baseurl=https://raw.githubusercontent.com/${repo}/archdi-pkg/${branch}" lib
	fi
	chmod 755 lib
	if [[ ${chrootoption} == 1 ]]; then
		./lib --chroot
	else
		./lib --root
	fi
}

dependencies(){
	lastversion=""
	
	if [[ ${testmode} == 0 ]]; then
		clear
	fi
	echo "${apptitle}"
	echo ""
	
	echo "Checking internet and server connexion ..."
	echo ""
	getdata 0
	lastversion=${getdatavalue}
	
	echo ""
	echo "Checking dependencies :"
	needinstall=0
	if [ -e /usr/bin/wget ]; then
		echo "wget : installed"
	else
		echo "wget : not installed"
		needinstall=1
	fi
	if [ -e /usr/bin/whiptail ]; then
		echo "libnewt : installed"
	else
		echo "libnewt : not installed"
		needinstall=1
	fi
	if [ ${needinstall} = 1 ]; then
		echo ""
		echo "Need install missing dependencies..."
		pacman -S --needed wget libnewt
		if [[ ${?} != 0 ]]; then
			exit
		fi
	fi
	
	if [ "$0" = "/usr/bin/archdi" ]; then
		echo ""
		echo "Checking bin version..."
		if [ ! ${version} = ${lastversion} ]; then
			if (whiptail --backtitle "$apptitle" --yesno "New version found !\n\nInstall last version ?" 0 0) then
				getfile 1 /tmp/archdi
				sh /tmp/archdi -i
				exit 0
			fi
		fi
	fi
}


# $1 : Source Item Index (0:version 1:bin 2:pkg)
getdatavalue=""
getdata(){
	ctimeout=0
	maxtime=10
	val=""
	while [[ ${val} == "" ]]; do
		if [[ ${sourcesindex} == 0 ]]; then
			ctimeout+=2
			maxtime+=10
		fi
		getsource
		val=$(curl --connect-timeout ${ctimeout} --max-time ${maxtime} -L ${source[${1}]})
	done
	getdatavalue=${val}
}
# $1 : Source Item Index (0:version 1:bin 2:pkg)
# $2 : Target filename
getfile(){
	ctimeout=2
	maxtime=20
	val=""
	while [[ ${val} == "" ]]; do
		if [[ ${sourcesindex} == 0 ]]; then
			ctimeout+=1
			maxtime+=10
		fi
		getsource
		echo "curl --connect-timeout ${ctimeout} --max-time ${maxtime} -L ${source[${1}]} > ${2}"
		curl --connect-timeout ${ctimeout} --max-time ${maxtime} -L ${source[${1}]} > ${2}
		if [[ ${?} ]]; then
			return 0
		fi
	done
}

sources=()
sourcesindex=0
source=
# $1 : version
# $2 : bin
# $3 : pkg
addsource(){
	sources+=("${1};${2};${3};${4}")
}
getsource(){
	sourcesindex=0
	source=${sources[${sourcesindex}]}
	IFS=';'
	read -ra source <<< "${source}"
	IFS=' '
	if [[ ${sourcesindex} -lt ${#sources[@]} ]]; then
		sourcesindex+=1
	else
		sourcesindex=0
	fi
}

addsource "http://archdi.sourceforge.net/version" \
					"http://archdi.sourceforge.net/archdi" \
					"http://archdi.sourceforge.net/archdi-pkg"
addsource "https://raw.githubusercontent.com/MatMoul/archdi/master/version" \
					"https://matmoul.github.io/archdi" \
					"https://raw.githubusercontent.com/MatMoul/archdi-pkg/master/pkg.tar"


localmode=0
testmode=0
repo=""
branch=""
while (( "${#}" )); do
	case ${1} in
		-h|--help)
			help
			exit 0
		;;
		-i|--install)
			install
			exit 0
		;;
		--chroot)
			chrootoption=1
		;;
		-l | --local)
			shift
			localmode=1
		;;
		-t | --test)
			shift
			testmode=1
			repo=${1}
			branch=${2}
			if [[ "${branch}" == "" ]]; then
				branch="develop"
			fi
			echo "Github repo   : ${repo}/archdi-pkg"
			echo "Github branch : ${branch}"
		;;
	esac
	shift
done

run
